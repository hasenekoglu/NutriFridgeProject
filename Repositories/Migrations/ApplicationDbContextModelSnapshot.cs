// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FoodValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodValue = "Delicious and nutritious",
                            Name = "Scrambled Eggs",
                            Recipe = "Scramble eggs and add diced tomatoes"
                        },
                        new
                        {
                            Id = 2,
                            FoodValue = "Fresh and healthy",
                            Name = "Tomato Salad",
                            Recipe = "Slice tomatoes and add olive oil"
                        });
                });

            modelBuilder.Entity("Models.FoodMaterial", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("FoodId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("FoodsMaterials");
                });

            modelBuilder.Entity("Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FoodValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodValue = "10g protein",
                            Name = "Egg"
                        },
                        new
                        {
                            Id = 2,
                            FoodValue = "100g Vitamin C",
                            Name = "Tomato"
                        });
                });

            modelBuilder.Entity("Models.FoodMaterial", b =>
                {
                    b.HasOne("Models.Food", "Food")
                        .WithMany("FoodMaterials")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Material", "Material")
                        .WithMany("FoodMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Models.Food", b =>
                {
                    b.Navigation("FoodMaterials");
                });

            modelBuilder.Entity("Models.Material", b =>
                {
                    b.Navigation("FoodMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
